kotlin, java 차이점

1. 코드의 간결성: Kotlin은 더 간결한 문법을 제공하고, boilerplate 코드를 줄일 수 있습니다.
예를 들어, Kotlin에서는 클래스의 멤버 변수를 선언하고 초기화하는 코드를 한 줄로 간략화할 수 있습니다.

// Kotlin
class Example(val name: String, val age: Int)

// Java
public class Example {
    private String name;
    private int age;

    public Example(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}

2. Nullable 타입: Kotlin은 변수가 null일 수 있는 경우를 명시적으로 표현하기 위해 nullable 타입을 도입했습니다.
 이로써 null 포인터 예외를 방지할 수 있습니다.

 // Kotlin
 var nullableString: String? = null

 // Java
 String nullableString = null; // Java에서는 모든 참조 타입이 기본적으로 null이 될 수 있습니다.

 3. 확장 함수: Kotlin은 기존 클래스의 메서드를 수정하지 않고도 새로운 메서드를 추가할 수 있는 확장 함수를 지원합니다.
// Kotlin
fun String.addExclamation(): String {
    return this + "!"
}

4. 스마트 캐스팅: Kotlin은 타입 검사 후에 자동으로 해당 타입으로 캐스팅되는 스마트 캐스팅을 제공합니다.
// Kotlin
fun printLength(value: Any) {
    if (value is String) {
        println(value.length) // 자동으로 String으로 캐스팅됨
    }
}
